source('LibrariesPreprocess.R')
getwd()
setwd("C:/Users/waldi/Documents/8vo semestre/SSPIA II/R")
source('LibrariesPreprocess.R')
set.seed(1320)
df.Startups <- read.csv(file "DATASETS/50Startups.csv", header = T, stringAsFactors= T)
df.Startups <- read.csv(file "DATASETS/50_Startups.csv", header = T, stringAsFactors= T)
df.Startups <- read.csv(file ="DATASETS/50_Startups.csv", header = T, stringAsFactors= T)
df.Startups <- read.csv(file ="DATASETS/50_Startups.csv", header = T, stringsAsFactors= T)
summary(df.Startups)
source('LibrariesPreprocess.R')
install.packages("data.table",dependencies = T)
install.packages("data.table", dependencies = T)
install.packages("mltools",dependencies = T)
if(!require(mltools)){
install.packages("mltools",dependencies = T)
}
#Habilitar
library(ggplot2)
library(caTools)
library(data.table)
library(mltools)
install.packages("mltools",dependencies = T)
install.packages("data.table",dependencies = T)
install.packages("data.table", dependencies = T)
source('LibrariesPreprocess.R')
df.Startups.ohe <- one_hot(as.data.table(df.Startups))
df.Startups.ohe$`State_New York` <- NULL
df.Startups.new <- as.data.frame(df.Startups.ohe)
View(mt.Correlation)
mt.Correlation <- cor(df.Startups.new)
View(mt.Correlation)
#Graficas
library(corrplot)
#Graficas
install.packages("corrplot")
library(corrplot)
corrplot(mt.Correlation, method = "color",
type = 'upper',
diag=F)
Split <- sample.split(df.Startups.new$Profit,
SplitRatio = 0.8)
df.Startups.Train <- subset(df.Startups.new, Split == T)
df.Startups.Test <- subset(df.Startups.new, Split == F)
mdl.ALL <- lm(formula = Profit ~ . , data = df.Startups.Train)
summary(mdl.ALL)
setwd("C:/Users/waldi/Documents/8vo semestre/SSPIA II/RepositorioEquipoEjercicios/SSPIAII.24A.Ejercicios04")
source("LibrariesPreprocess.R")
setwd("C:/Users/waldi/Documents/8vo semestre/SSPIA II/RepositorioEquipoEjercicios/SSPIAII.24A.Ejercicios04")
setwd("C:/Users/waldi/Documents/8vo semestre/SSPIA II/RepositorioEquipoEjercicios/SSPIAII.24A.Ejercicios04")
source("LibrariesPreprocess.R")
#Carga del csv que contiene el conjunto de datos.
source("LibrariesPreprocess.R")
setwd("C:/Users/waldi/Documents/8vo semestre/SSPIA II/RepositorioEquipoEjercicios/SSPIAII.24A.Ejercicios04/P1.2 - Regresión Lineal Múltiple")
source("LibrariesPreprocess.R")
df.Startups <- read.csv("50_Startups.csv")
set.seed(12345)
#Variables dummies.
df.Startups$State <- factor(df.Startups$State, levels = c("New York","California","Florida"),
labels = c(1,2,3))
#Calculo de medidas de tendencia central.
summary(df.Startups)
#Diagrama de caja del conjunto de datos.
boxplot(df.Startups)
#Separación de entrenamiento y prueba
Split <- sample.split(Y = df.Startups$Profit, SplitRatio = 0.3)
df.Startups.Train <- subset(df.Startups, Split == T)
df.Startups.Test <- subset(df.Startups, Split == F)
#Regresión lineal multiple  lm()
mdl.Regresor <- lm(formula = Profit ~ Marketing.Spend + Administration + R.D.Spend, data = df.Startups.Train)
summary(mdl.Regresor)
mdl.Predict <- predict(object = mdl.Regresor, newdata = df.Startups.Test)
repeat {
# Realiza eliminación hacia adelante
Auxiliar <- step(mdl.Regresor, direction = "forward")
# Realiza eliminación hacia atrás
Auxiliar <- step(Auxiliar, direction = "backward")
save(Auxiliar, file = "Objetosrmarkdown")
# Comprueba si se han agregado o eliminado variables
if (identical(Auxiliar, mdl.Regresor)) {
break  # Si no se han realizado cambios, termina el bucle
} else {
mdl.Regresor <- Auxiliar  # Actualiza el modelo con las nuevas características
}
}
summary(mdl.Regresor)
summary(mdl.Regresor)
#Gráfica
plt.Profit <- ggplot() +
theme_light() +
ggtitle("Regresión: Profit vs. Spends") +
xlab("Gastos de investigacion y desarrollo") +
ylab("Profit")
plt.Profit.Data <- plt.Profit +
geom_point(aes(x = df.Startups.Train$R.D.Spend,
y = df.Startups.Train$Profit),
colour = "blue2") +
geom_line(aes(x = df.Startups.Train$R.D.Spend,
y = predict(mdl.Regresor, newdata = df.Startups.Train)),
colour = "red3")
#Regresión lineal multiple  lm()
mdl.Regresor <- lm(formula = Profit ~ ., data = df.Startups.Train)
#Regresión lineal multiple  lm()
mdl.Regresor <- lm(formula = Profit ~ ., data = df.Startups.Train)
summary(mdl.Regresor)
mdl.Predict <- predict(object = mdl.Regresor, newdata = df.Startups.Test)
repeat {
# Realiza eliminación hacia adelante
Auxiliar <- step(mdl.Regresor, direction = "forward")
# Realiza eliminación hacia atrás
Auxiliar <- step(Auxiliar, direction = "backward")
save(Auxiliar, file = "Objetosrmarkdown")
# Comprueba si se han agregado o eliminado variables
if (identical(Auxiliar, mdl.Regresor)) {
break  # Si no se han realizado cambios, termina el bucle
} else {
mdl.Regresor <- Auxiliar  # Actualiza el modelo con las nuevas características
}
}
summary(mdl.Regresor)
#Gráfica
plt.Profit <- ggplot() +
theme_light() +
ggtitle("Regresión: Profit vs. Spends") +
xlab("Gastos de investigacion y desarrollo") +
ylab("Profit")
plt.Profit.Data <- plt.Profit +
geom_point(aes(x = df.Startups.Train$R.D.Spend,
y = df.Startups.Train$Profit),
colour = "blue2") +
geom_line(aes(x = df.Startups.Train$R.D.Spend,
y = predict(mdl.Regresor, newdata = df.Startups.Train)),
colour = "red3")
#Muestra la gráfica.
plt.Profit.Data
